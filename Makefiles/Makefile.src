# Your Makefile should include this Makefile after defining:
#   EXE - the executable name
#   TOOLBASE - the base filename for files with .h & .cpp versions
#   SRCONLY - any cpp files without headers.
#   HDRONLY - any header files without cpp
#   COMPILE_ANY_CHANGE - any files that should be compiled if any of the
#                        files change.  These files MUST also be
#                        included in TOOLBASE or SRCONLY.  Here they are
#                        just the base name without the extension.
#   VERSION - if not 0.0.1
#   BINDIR if it is not ../bin
#   USER_INCLUDES if any additional directories need to be included to pick up
#                 header files (example: USER_INCLUDES=-ImyDir1 -ImyDir2)
#   INSTALLDIR if not /usr/local/bin
EXE ?=
BINDIR ?= ../bin
TESTDIR ?= ../test

MAKEFILES_PATH := $(dir $(lastword $(MAKEFILE_LIST)))
include $(MAKEFILES_PATH)Makefile.common

LIBRARY = $(USER_LIBS) $(REQ_LIBS$(VARIABLE_EXT))

RELEASE_FILE?=$(DIR_NAME).$(VERSION).tgz

# Set the bins for each build type
BINDIR_OPT ?= $(BINDIR)$(SUBDIR_OPT)
BINDIR_DEBUG ?= $(BINDIR)$(SUBDIR_DEBUG)
BINDIR_PROFILE ?= $(BINDIR)$(SUBDIR_PROFILE)

ADDITIONAL_HELP= @echo "make install      Install binaries in $(INSTALLDIR)";\
	echo "make install INSTALLDIR=directory_for_binaries";\
	echo "                  Install binaries in directory_for_binaries"

.PHONY: install

opt debug profile: $(BINDIR$(VARIABLE_EXT))/$(EXE)

$(BINDIR$(VARIABLE_EXT))/$(EXE): $(BINDIR$(VARIABLE_EXT)) $(LIBRARY) $(OBJECTS)
	$(CXX) $(CFLAGS) -o $@  $(OBJECTS) $(LIBRARY) -lm -lz -lssl

# Build the statgen lib if necessary
$(STAT_GEN_LIB$(VARIABLE_EXT)): 
	$(MAKE) -C $(@D) OPTFLAG="$(OPTFLAG$(VARIABLE_EXT))" --no-print-directory $(MAKECMDGOALS)

$(BINDIR$(VARIABLE_EXT)):
	mkdir -p $@

specific_clean :
	-rm $(BINDIR_OPT)/$(EXE)
	-rm -rf $(BINDIR_DEBUG)
	-rm -rf $(BINDIR_PROFILE)

install : all $(INSTALLDIR)
	@echo " "
	@echo Installing to directory $(INSTALLDIR)
	@echo To select a different directory, run
	@echo " "
	@echo make install INSTALLDIR=your_preferred_dir
	@echo " "
	cp $(PROG) $(INSTALLDIR)

$(INSTALLDIR) :
	@echo " "
	@echo Creating directory $(INSTALLDIR)
	@echo " "
	@mkdir -p $(INSTALLDIR)

package : 
# the touch gets rid of a tar warning
#	echo directory name = $(DIR_NAME)
	touch $(RELEASE_FILE)
	tar cvz --exclude="*~" --exclude=$(RELEASE_FILE) --exclude='obj/*' --exclude='*.a'  --exclude='include/*' --exclude='bin/*' --exclude='test/results/*' --exclude-vcs --exclude-backups -f $(RELEASE_FILE) --transform 's,^,$(DIR_NAME)_$(VERSION)/,' * --show-transformed-names 

PACKAGE2_MAKE = $(MAKEFILES_PATH)/Makefile.include

package2 : 
# the touch gets rid of a tar warning
#	echo directory name = $(DIR_NAME)
	touch $(RELEASE_FILE)
	tar cvz --exclude="*~" --exclude=$(RELEASE_FILE) --exclude='obj/*' --exclude='*.a'  --exclude='include/*' --exclude='bin/*' --exclude='test/results/*' --exclude-vcs --exclude-backups -f $(RELEASE_FILE) --transform 's,^,$(DIR_NAME)_$(VERSION)/$(DIR_NAME)/,' --transform 's,$(DIR_NAME)/$(BASE_LIB_DIRNAME),$(BASE_LIB_DIRNAME),'  --transform 's,$(DIR_NAME)/$(PACKAGE2_MAKE),$(PACKAGE2_MAKE),' * $(BASE_LIB_PATH) $(PACKAGE2_MAKE) --show-transformed-names
